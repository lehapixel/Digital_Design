{"version":3,"file":"extension.js","sources":["../../../../../src/Controllers/CityInfoDataController.ts","../../../../../src/Controllers/CustomEmployeeDataController.ts","../../../../../src/Controllers/GroupEmployeesDataController.ts","../../../../../src/Controllers/SendForAgreementDataController.ts","../../../../../src/Controllers/TicketsSearchDataController.ts","../../../../../src/EventHandlers.tsx","../../../../../src/Index.ts"],"sourcesContent":["import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\nimport { ICityInfoData } from \"../Models/ICityInfoData\";\n\nexport class CityInfoDataController {\n    constructor(private services: $RequestManager) {}\n\n    public GetCityInfo(cityId: string): Promise<ICityInfoData> {\n        let url = urlStore.urlResolver.resolveUrl(\"GetCityInfo\", \"CityInfoData\");\n        let data = {\n            cityId: cityId\n        }\n        return this.services.requestManager.post(url, JSON.stringify(data));\n    }\n}\n\nexport type $CityInfoDataController = { CityInfoDataController: CityInfoDataController }\nexport const $CityInfoDataController = serviceName((s: $CityInfoDataController) => s.CityInfoDataController)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\nimport { ICustomEmployeeData } from \"../Models/ICustomEmployeeData\";\n\nexport class CustomEmployeeDataController {\n    constructor(private services: $RequestManager) {}\n\n    public GetEmployeeData(employeeId: string): Promise<ICustomEmployeeData> {\n        let url = urlStore.urlResolver.resolveUrl(\"GetEmployeeData\", \"CustomEmployeeData\");\n        let data = {\n            employeeId: employeeId\n        }\n        return this.services.requestManager.post(url, JSON.stringify(data));\n    }\n}\n\nexport type $CustomEmployeeDataController = { CustomEmployeeDataController: CustomEmployeeDataController }\nexport const $CustomEmployeeDataController = serviceName((s: $CustomEmployeeDataController) => s.CustomEmployeeDataController)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\nimport { IGroupEmployeesData } from \"../Models/IGroupEmployeesData\";\n\nexport class GroupEmployeesDataController {\n    constructor(private services: $RequestManager) {}\n\n    public GetGroupEmployees(groupName: string): Promise<IGroupEmployeesData> {\n        let url = urlStore.urlResolver.resolveUrl(\"GetGroupEmployees\", \"GroupEmployeesData\");\n        let data = {\n            groupName: groupName\n        }\n        return this.services.requestManager.post(url, JSON.stringify(data));\n    }\n}\n\nexport type $GroupEmployeesDataController = { GroupEmployeesDataController: GroupEmployeesDataController }\nexport const $GroupEmployeesDataController = serviceName((s: $GroupEmployeesDataController) => s.GroupEmployeesDataController)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\nimport { ISendForAgreementData } from \"../Models/ISendForAgreementData\";\n\nexport class SendForAgreementDataController {\n    constructor(private services: $RequestManager) {}\n\n    public GetSendForAgreement(cardId: string): Promise<ISendForAgreementData> {\n        let url = urlStore.urlResolver.resolveUrl(\"GetSendForAgreement\", \"SendForAgreementData\");\n        let data = {\n            cardId : cardId\n        }\n        return this.services.requestManager.post(url, JSON.stringify(data));\n    }\n}\n\nexport type $SendForAgreementDataController = { SendForAgreementDataController: SendForAgreementDataController }\nexport const $SendForAgreementDataController = serviceName((s: $SendForAgreementDataController) => s.SendForAgreementDataController)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\nimport { ITicketsSearchData } from \"../Models/ITicketsSearchData\";\n\nexport class TicketsSearchDataController {\n    constructor(private services: $RequestManager) {}\n\n    public GetTicketsSearch(destination: string, dateFrom: string, dateTo: string,): Promise<ITicketsSearchData> {\n        let url = urlStore.urlResolver.resolveUrl(\"GetTicketsSearch\", \"TicketsSearchData\");\n        let data = {\n            destination : destination,\n            dateFrom : dateFrom,\n            dateTo : dateTo\n        }\n        return this.services.requestManager.post(url, JSON.stringify(data));\n    }\n}\n\nexport type $TicketsSearchDataController = { TicketsSearchDataController: TicketsSearchDataController }\nexport const $TicketsSearchDataController = serviceName((s: $TicketsSearchDataController) => s.TicketsSearchDataController)","﻿import { DirectoryDesignerRow } from \"@docsvision/webclient/BackOffice/DirectoryDesignerRow\";\nimport { Employee } from \"@docsvision/webclient/BackOffice/Employee\";\nimport { MultipleEmployees } from \"@docsvision/webclient/BackOffice/MultipleEmployees\";\nimport { Numerator } from \"@docsvision/webclient/BackOffice/Numerator\";\nimport { MessageBox } from \"@docsvision/webclient/Helpers/MessageBox/MessageBox\";\nimport { CustomButton } from \"@docsvision/webclient/Platform/CustomButton\";\nimport { DateTimePicker } from \"@docsvision/webclient/Platform/DateTimePicker\";\nimport { Dropdown } from \"@docsvision/webclient/Platform/Dropdown\";\nimport { NumberControl } from \"@docsvision/webclient/Platform/Number\";\nimport { TextArea } from \"@docsvision/webclient/Platform/TextArea\";\nimport { TextBox } from \"@docsvision/webclient/Platform/TextBox\";\nimport { $RouterNavigation, IS_BACK_PARAMETER } from \"@docsvision/webclient/System/$Router\";\nimport { CancelableEventArgs } from \"@docsvision/webclient/System/CancelableEventArgs\";\nimport { ICardSavingEventArgs } from \"@docsvision/webclient/System/ICardSavingEventArgs\";\nimport { Layout } from \"@docsvision/webclient/System/Layout\";\nimport moment from \"moment\";\nimport { $CityInfoDataController } from \"./Controllers/CityInfoDataController\";\nimport { $CustomEmployeeDataController } from \"./Controllers/CustomEmployeeDataController\";\nimport { $GroupEmployeesDataController } from \"./Controllers/GroupEmployeesDataController\";\nimport { $SendForAgreementDataController } from \"./Controllers/SendForAgreementDataController\";\nimport { $TicketsSearchDataController } from \"./Controllers/TicketsSearchDataController\";\n\nexport async function dateFromTo_DataChanged (sender: DateTimePicker) {\n    /* --1.2.\tВ разметке на «редактирование»: при изменении контролов «Даты командировки С:» или «по:» и, \n    если заполнены оба поля необходимо рассчитать кол-во дней в командировке и записать в поле «Кол-во дней в командировке». */\n\n    let layout = sender.layout;\n    let dateFromControl = layout.controls.tryGet<DateTimePicker>(\"dateFrom\");\n    let dateToControl = layout.controls.tryGet<DateTimePicker>(\"dateTo\");\n    let numberOfDaysToControl = layout.controls.tryGet<NumberControl>(\"numberOfDays\");\n    if (!dateFromControl || !dateToControl || !numberOfDaysToControl) { return;}\n    if (dateFromControl.params.value != null && dateToControl.params.value != null) {\n        var dateFrom = dateFromControl.params.value;\n        var dateTo  = dateToControl.params.value;\n\n        if (dateFrom <= dateTo) {\n            var time = ((dateTo.valueOf() - dateFrom.valueOf()) / (1000 * 3600 * 24)) + 1;\n            numberOfDaysToControl.params.value = time;\n        }\n        else {\n            numberOfDaysToControl.params.value = null;\n        }\n    }\n    else {\n        numberOfDaysToControl.params.value = null;\n    }\n      \n    /* 1.2.\tВ разметке на «редактирование»: при изменении контролов «Даты командировки С:» или «по:» и, \n    если заполнены оба поля необходимо рассчитать кол-во дней в командировке и записать в поле «Кол-во дней в командировке».-- \n    Так же есть обработка исключений в 2.2.*/\n    \n    /* --2.3 */\n    let directoryCityControl = layout.controls.tryGet<DirectoryDesignerRow>(\"directoryCity\");\n    let sumOfBusinessTripsMoneyControl = layout.controls.tryGet<NumberControl>(\"sumOfBusinessTripsMoney\");\n    \n    if (!directoryCityControl || !numberOfDaysToControl || !sumOfBusinessTripsMoneyControl) { return; }\n    if (directoryCityControl.hasValue() && numberOfDaysToControl != null) {\n        let cityInfoService = layout.getService($CityInfoDataController);\n        let model = await cityInfoService.GetCityInfo(directoryCityControl.params.value.id);\n        if (model) {\n            sumOfBusinessTripsMoneyControl.params.value = model.payPerDay * numberOfDaysToControl.params.value;\n        }\n        else {\n            sumOfBusinessTripsMoneyControl.params.value = null;\n        }\n    }\n    else {\n        sumOfBusinessTripsMoneyControl.params.value = null;\n    }\n    /* 2.3-- */\n\n    // --2.5\n    let ticketsPriceControl = layout.controls.tryGet<NumberControl>(\"ticketsPrice\");\n    ticketsPriceControl.params.value = null;\n    // 2.5--\n}\n\nexport async function numberOfDays_DataChanged (sender: NumberControl) {\n    /* --1.2 */\n    let layout = sender.layout;\n    let dateFromControl = layout.controls.tryGet<DateTimePicker>(\"dateFrom\");\n    let dateToControl = layout.controls.tryGet<DateTimePicker>(\"dateTo\");\n    let numberOfDaysToControl = layout.controls.tryGet<NumberControl>(\"numberOfDays\");\n    if (!dateFromControl || !dateToControl || !numberOfDaysToControl) { return;}\n\n    if (dateFromControl.params.value != null && dateToControl.params.value != null) {\n        var dateFrom = dateFromControl.params.value;\n        var dateTo  = dateToControl.params.value;\n\n        if (dateFrom <= dateTo) {\n            var time = ((dateTo.valueOf() - dateFrom.valueOf()) / (1000 * 3600 * 24)) + 1;\n            numberOfDaysToControl.params.value = time;\n        }\n        else {\n            numberOfDaysToControl.params.value = null;\n        }\n    }\n    else {\n        numberOfDaysToControl.params.value = null;\n    }\n    /* 1.2-- */\n    /* --2.3 */\n    let directoryCityControl = layout.controls.tryGet<DirectoryDesignerRow>(\"directoryCity\");\n    let sumOfBusinessTripsMoneyControl = layout.controls.tryGet<NumberControl>(\"sumOfBusinessTripsMoney\");\n    \n    if (!directoryCityControl || !numberOfDaysToControl || !sumOfBusinessTripsMoneyControl) { return; }\n    if (directoryCityControl.hasValue() && numberOfDaysToControl != null) {\n        let cityInfoService = layout.getService($CityInfoDataController);\n        let model = await cityInfoService.GetCityInfo(directoryCityControl.params.value.id);\n        if (model) {\n            sumOfBusinessTripsMoneyControl.params.value = model.payPerDay * numberOfDaysToControl.params.value;\n        }\n        else {\n            sumOfBusinessTripsMoneyControl.params.value = null;\n        }\n    }\n    else {\n        sumOfBusinessTripsMoneyControl.params.value = null;\n    }\n    /* 2.3-- */    \n}\n\n\nexport async function shortInfoButton_clik(sender: CustomButton) {\n    /* --1.3. В разметке на «чтение»: добавить на ленту кнопку, по нажатию на кнопку выводить сообщение (MessageBox.ShowInfo) \n    с краткой информацией по заявке: «Номер заявки», «Дата создания», «Даты командировки С:», «по:», «Основание для поездки». */\n\n    let layout = sender.layout;\n    let numeratorControl = layout.controls.tryGet<Numerator>(\"number\");\n    let dateOfCreationControl = layout.controls.tryGet<DateTimePicker>(\"dateOfCreation\");\n    let dateFromControl = layout.controls.tryGet<DateTimePicker>(\"dateFrom\");\n    let datedateToControl = layout.controls.tryGet<DateTimePicker>(\"dateTo\");\n    let reasonForBusinessTripsToControl = layout.controls.tryGet<TextArea>(\"reasonForBusinessTrips\");\n\n    if (!numeratorControl || !dateOfCreationControl || !dateFromControl || !datedateToControl || !reasonForBusinessTripsToControl) { return; }\n    let message = \"Номер заявки: {0}\\nДата создания: {1}\\nДаты командировки С: {2}\\nпо: {3}\\nОснование для поездки: \\n{4}\"\n        .format(\n            (numeratorControl.hasValue() ? numeratorControl.params.value.number : \"не задан\"),\n            (dateOfCreationControl.hasValue() ? dateOfCreationControl.params.value.toLocaleDateString() : \"не задана\"),\n            (dateFromControl.hasValue() ? dateFromControl.params.value.toLocaleDateString() : \"не задана\"),\n            (datedateToControl.hasValue() ? datedateToControl.params.value.toLocaleDateString() : \"не задана\"),\n            (reasonForBusinessTripsToControl.hasValue() ? reasonForBusinessTripsToControl.params.value.toString() : \"не задано\"),\n    );\n    MessageBox.ShowInfo(message);\n    \n    /* 1.3. В разметке на «чтение»: добавить на ленту кнопку, по нажатию на кнопку выводить сообщение (MessageBox.ShowInfo) \n    с краткой информацией по заявке: «Номер заявки», «Дата создания», «Даты командировки С:», «по:», «Основание для поездки».-- */\n}\n\nexport function onCardSaving(sender: Layout, args: CancelableEventArgs<ICardSavingEventArgs>) {\n    /* --1.4. В разметке на «редактирование»: перед сохранением карточки проверить, \n    что заполнен элемент «Номер заявки» и «Название», если он пустой, \n    выдавать предупреждение и отменять сохранение. */\n\n    let layout = sender.layout;\n    let nameControl = layout.controls.tryGet<TextBox>(\"name\");\n    let numberControl = layout.controls.tryGet<Numerator>(\"number\");\n    if (!nameControl || !numberControl) { return; }\n\n    if (nameControl.params.value == null || numberControl.params.value == null) {\n        if (nameControl.params.value != null && numberControl.params.value == null) {\n            MessageBox.ShowError(\"Заполните поле \\\"Номер заявки\\\".\");\n        }\n        else if (nameControl.params.value == null && numberControl.params.value != null) {\n            MessageBox.ShowError(\"Заполните поле \\\"Название\\\".\");\n        }\n        else {\n            MessageBox.ShowError(\"Заполните поля \\\"Название\\\" и \\\"Номер заявки\\\".\");\n        }\n        args.cancel();  \n    }\n\n    /* 1.4. В разметке на «редактирование»: перед сохранением карточки проверить, \n    что заполнен элемент «Номер заявки» и «Название», если он пустой, \n    выдавать предупреждение и отменять сохранение.-- */\n}\nexport async function seconded_EmployeeChanged(sender: Employee) {\n    /* --2.1. В разметке на «редактирование»: при изменении поля «Командируемый», \n    поля «Руководитель» и «Телефон» необходимо заполнить данными из сотрудника, выбранного в поле. */\n\n    let layout = sender.layout;\n    let supervisorControl = layout.controls.tryGet<Employee>(\"supervisor\");\n    let telephoneControl = layout.controls.tryGet<TextBox>(\"telephone\");\n    if (!supervisorControl || !telephoneControl) { return; }\n    if (sender.hasValue()) {\n        let customEmployeeService = layout.getService($CustomEmployeeDataController);\n        let model = await customEmployeeService.GetEmployeeData(sender.params.value.id);\n        if (model) {\n            telephoneControl.params.value = model.phone;\n            if (sender.params.value.id != model.manager.id) {\n                supervisorControl.params.value = model.manager;\n            }\n            else {\n                let modelCEO = await customEmployeeService.GetEmployeeData(\"57158509-b8c3-467c-a4b9-69727ccfe5cd\"); // Guid генерального директора\n                supervisorControl.params.value = modelCEO.manager;\n            }\n        }\n    }\n    else {\n        telephoneControl.params.value = null;\n        supervisorControl.params.value = null; \n    }\n\n    /* 2.1. В разметке на «редактирование»: при изменении поля «Командируемый», \n    поля «Руководитель» и «Телефон» необходимо заполнить данными из сотрудника, выбранного в поле.-- */\n}\n\nexport async function afterOpeningTheCard(sender: Layout) {\n    /* --2.2. В разметке на «редактирование»: при первом открытии карточки в поле «Кто оформляет» \n    должны вписываться сотрудники из группы справочника сотрудников - «Секретарь». */\n\n    let layout = sender.layout;\n\n    let whoDrawsUpControl = layout.controls.tryGet<MultipleEmployees>(\"multipleEmployeesWhoDrawsUp\");\n    if (!whoDrawsUpControl) { return; }\n    let service = sender.layout.getService($GroupEmployeesDataController);\n    let model = await service.GetGroupEmployees(\"Секретарь\");\n    whoDrawsUpControl.params.value = model.employees;\n\n    /* 2.2. В разметке на «редактирование»: при первом открытии карточки в поле «Кто оформляет» \n    должны вписываться сотрудники из группы справочника сотрудников - «Секретарь».-- */\n\n    /* --1.2 */\n    let dateFromControl = layout.controls.tryGet<DateTimePicker>(\"dateFrom\");\n    let dateToControl = layout.controls.tryGet<DateTimePicker>(\"dateTo\");\n    let numberOfDaysToControl = layout.controls.tryGet<NumberControl>(\"numberOfDays\");\n    if (!dateFromControl || !dateToControl || !numberOfDaysToControl) { return; }\n    if (dateFromControl.params.value != null && dateToControl.params.value != null) {\n        var dateFrom = dateFromControl.params.value;\n        var dateTo  = dateToControl.params.value;\n\n        if (dateFrom <= dateTo) {\n            var time = ((dateTo.valueOf() - dateFrom.valueOf()) / (1000 * 3600 * 24)) + 1;\n            numberOfDaysToControl.params.value = time;\n        }\n    }\n    /* 1.2-- */    \n}\n\nexport async function directoryCitySelection(sender: DirectoryDesignerRow) {\n    /* 2.3. В разметке на «редактирование»: при выборе значения в поле «Город», \n    необходимо получить значение из этого элемента справочника (мы его создавали ранее, поле «Суточные») \n    и вписать в поле «Сумма командировочных», рассчитав по следующей формуле: «Суточные» * значение в поле «Кол-во дней в командировке».*/    \n    \n    let layout = sender.layout;\n    let directoryCityControl = layout.controls.tryGet<DirectoryDesignerRow>(\"directoryCity\");\n    let numberOfDaysToControl = layout.controls.tryGet<NumberControl>(\"numberOfDays\");\n    let sumOfBusinessTripsMoneyControl = layout.controls.tryGet<NumberControl>(\"sumOfBusinessTripsMoney\");\n\n    if (!directoryCityControl || !numberOfDaysToControl || !sumOfBusinessTripsMoneyControl) { return; }\n    if (sender.hasValue() && numberOfDaysToControl != null) {\n        let cityInfoService = layout.getService($CityInfoDataController);\n        let model = await cityInfoService.GetCityInfo(sender.params.value.id);\n        if (model) {\n            sumOfBusinessTripsMoneyControl.params.value = model.payPerDay * numberOfDaysToControl.params.value;\n        }\n    }\n    else {\n        sumOfBusinessTripsMoneyControl.params.value = null;\n    }\n    /* 2.3. В разметке на «редактирование»: при выборе значения в поле «Город», \n    необходимо получить значение из этого элемента справочника (мы его создавали ранее, поле «Суточные») \n    и вписать в поле «Сумма командировочных», рассчитав по следующей формуле: «Суточные» * значение в поле «Кол-во дней в командировке».--\n    Так же есть обработка исключений в 1.2. */   \n    \n    \n    // --2.5\n    let ticketsPriceControl = layout.controls.tryGet<NumberControl>(\"ticketsPrice\");\n    ticketsPriceControl.params.value = null;\n    // 2.5--\n}\n\nexport async function sumOfBusinessTripsMoneyControlDataChanged(sender: NumberControl) {\n    /* 2.3. В разметке на «редактирование»: при выборе значения в поле «Город», \n    необходимо получить значение из этого элемента справочника (мы его создавали ранее, поле «Суточные») \n    и вписать в поле «Сумма командировочных», рассчитав по следующей формуле: «Суточные» * значение в поле «Кол-во дней в командировке».*/    \n    \n    let layout = sender.layout;\n    let directoryCityControl = layout.controls.tryGet<DirectoryDesignerRow>(\"directoryCity\");\n    let numberOfDaysToControl = layout.controls.tryGet<NumberControl>(\"numberOfDays\");\n    let sumOfBusinessTripsMoneyControl = layout.controls.tryGet<NumberControl>(\"sumOfBusinessTripsMoney\");\n    if (!directoryCityControl || !numberOfDaysToControl || !sumOfBusinessTripsMoneyControl) { return; }\n\n    if (numberOfDaysToControl.params.value != null && directoryCityControl != null) {\n        let cityInfoService = layout.getService($CityInfoDataController);\n        let model = await cityInfoService.GetCityInfo(directoryCityControl.params.value.id);\n        if (model) {\n            sumOfBusinessTripsMoneyControl.params.value = model.payPerDay * numberOfDaysToControl.params.value;\n        }\n    }\n    else {\n        sumOfBusinessTripsMoneyControl.params.value = null;\n    }\n    \n    /* 2.3. В разметке на «редактирование»: при выборе значения в поле «Город», \n    необходимо получить значение из этого элемента справочника (мы его создавали ранее, поле «Суточные») \n    и вписать в поле «Сумма командировочных», рассчитав по следующей формуле: «Суточные» * значение в поле «Кол-во дней в командировке».-- */   \n}\n\n/* --2.4. В разметке на «чтение»: добавить кнопку на форму карточки, \nпереводящую карточку в состояние «На согласование» и доступна только в состоянии «Проект». */\nexport async function buttonSendForAgreement_clik(sender: CustomButton) {\n    let layout = sender.layout;\n    let sendForAgreementService = layout.getService($SendForAgreementDataController);\n    let model = await sendForAgreementService.GetSendForAgreement(layout.cardInfo.id);\n    \n    MessageBox.ShowInfo(model.message);\n    \n    let cancelService = layout.getService($RouterNavigation);\n    cancelService.back();\n}\n/* 2.4. В разметке на «чтение»: добавить кнопку на форму карточки, \nпереводящую карточку в состояние «На согласование» и доступна только в состоянии «Проект».-- */\n\n/* 2.5. В разметке на «редактирование»: добавить кнопку «Запросить стоимость билетов». */\n//let ticketsControl = layout.controls.tryGet<Dropdown>(\"tickets\"); \n\nexport async function requestTicketPricesButton_clik(sender: CustomButton) {\n    let layout = sender.layout;\n    let directoryCityControl = layout.controls.tryGet<DirectoryDesignerRow>(\"directoryCity\");\n    let dateFromControl = layout.controls.tryGet<DateTimePicker>(\"dateFrom\");\n    let dateToControl = layout.controls.tryGet<DateTimePicker>(\"dateTo\");\n    let ticketsPriceControl = layout.controls.tryGet<NumberControl>(\"ticketsPrice\");\n    let ticketsControl = layout.controls.tryGet<Dropdown>(\"tickets\");\n    if (!directoryCityControl || !dateFromControl || !dateToControl || !ticketsPriceControl || !ticketsControl) { return; }\n    \n    if (ticketsControl.valueCode == 0) {\n        if (dateFromControl.params.value != null && dateToControl.params.value != null && ticketsControl.params.value != null) {\n            let cityInfoService = directoryCityControl.layout.getService($CityInfoDataController);\n            let cityInfoModel = await cityInfoService.GetCityInfo(directoryCityControl.params.value.id);\n            if (cityInfoModel) {\n                var destination = cityInfoModel.airportСode;\n                var dateFrom = moment(dateFromControl.params.value.toString()).format('DD.MM.YYYY');\n                var dateTo = moment(dateToControl.params.value.toString()).format('DD.MM.YYYY');\n                \n                let ticketsSearchService = layout.getService($TicketsSearchDataController);\n                let ticketsSearchModel = await ticketsSearchService.GetTicketsSearch(destination, dateFrom, dateTo);\n                if (Number(ticketsSearchModel.ticketsPrice) > 0) {\n                    ticketsPriceControl.params.value = Number(ticketsSearchModel.ticketsPrice); \n                } \n                else {\n                    ticketsPriceControl.params.value = null;\n                    MessageBox.ShowError(\"Билеты не найдены.\");\n                }      \n            }\n        }\n        else {\n            ticketsPriceControl.params.value = null;\n            MessageBox.ShowError(\"Билеты не найдены.\");\n        }\n    }\n    else {\n        MessageBox.ShowError(\"Стоимость билетов рассчитывается автоматически только для авиаперелётов.\");\n    }\n}\n\nexport async function ticketsSelection(sender: Dropdown) {\n    // --2.5\n    let layout = sender.layout;\n    let ticketsControl = layout.controls.tryGet<Dropdown>(\"tickets\");\n    let ticketsPriceControl = layout.controls.tryGet<NumberControl>(\"ticketsPrice\");\n    if (!ticketsControl || !ticketsPriceControl) { return; }\n\n    if (ticketsControl.valueCode != 0) {\n        ticketsPriceControl.params.value = null;\n    }\n    // 2.5--\n}\n\n//Отмена редактирования даты создания\nexport async function dateOfCreationControlDataChanged(sender: DateTimePicker) {\n    let layout = sender.layout;\n    let dateOfCreation = layout.controls.tryGet<DateTimePicker>(\"dateOfCreation\");\n    var today = new Date();\n    dateOfCreation.params.value = today;\n}","﻿import * as EventHandlers from \"./EventHandlers\";\r\nimport { extensionManager } from \"@docsvision/webclient/System/ExtensionManager\";\r\nimport { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { $CustomEmployeeDataController, CustomEmployeeDataController } from \"./Controllers/CustomEmployeeDataController\";\r\nimport { Service } from \"@docsvision/webclient/System/Service\";\r\nimport { $CityInfoDataController, CityInfoDataController } from \"./Controllers/CityInfoDataController\";\r\nimport { $GroupEmployeesDataController, GroupEmployeesDataController } from \"./Controllers/GroupEmployeesDataController\";\r\nimport { $TicketsSearchDataController, TicketsSearchDataController } from \"./Controllers/TicketsSearchDataController\";\r\nimport { $SendForAgreementDataController, SendForAgreementDataController } from \"./Controllers/SendForAgreementDataController\";\r\n\r\n\r\n// Главная входная точка всего расширения\r\n// Данный файл должен импортировать прямо или косвенно все остальные файлы, \r\n// чтобы rollup смог собрать их все в один бандл.\r\n\r\n// Регистрация расширения позволяет корректно установить все\r\n// обработчики событий, сервисы и прочие сущности web-приложения.\r\nextensionManager.registerExtension({\r\n    name: \"Request for Business Trip\",\r\n    version: \"5.5.16\",\r\n    globalEventHandlers: [ EventHandlers ],\r\n    layoutServices: [\r\n        Service.fromFactory($CustomEmployeeDataController, (services: $RequestManager) => new CustomEmployeeDataController(services)),\r\n        Service.fromFactory($CityInfoDataController, (services: $RequestManager) => new CityInfoDataController(services)),\r\n        Service.fromFactory($GroupEmployeesDataController, (services: $RequestManager) => new GroupEmployeesDataController(services)),\r\n        Service.fromFactory($TicketsSearchDataController, (services: $RequestManager) => new TicketsSearchDataController(services)),\r\n        Service.fromFactory($SendForAgreementDataController, (services: $RequestManager) => new SendForAgreementDataController(services))\r\n    ]\r\n});"],"names":["urlStore","serviceName","MessageBox","$RouterNavigation","moment","extensionManager","Service"],"mappings":";;;;;;IAKA;QACI,gCAAoB,QAAyB;YAAzB,aAAQ,GAAR,QAAQ,CAAiB;SAAI;QAE1C,4CAAW,GAAlB,UAAmB,MAAc;YAC7B,IAAI,GAAG,GAAGA,iBAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;YACzE,IAAI,IAAI,GAAG;gBACP,MAAM,EAAE,MAAM;aACjB,CAAA;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACvE;QACL,6BAAC;IAAD,CAAC,IAAA;IAGM,IAAM,uBAAuB,GAAGC,wBAAW,CAAC,UAAC,CAA0B,IAAK,OAAA,CAAC,CAAC,sBAAsB,GAAA,CAAC;;ICb5G;QACI,sCAAoB,QAAyB;YAAzB,aAAQ,GAAR,QAAQ,CAAiB;SAAI;QAE1C,sDAAe,GAAtB,UAAuB,UAAkB;YACrC,IAAI,GAAG,GAAGD,iBAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;YACnF,IAAI,IAAI,GAAG;gBACP,UAAU,EAAE,UAAU;aACzB,CAAA;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACvE;QACL,mCAAC;IAAD,CAAC,IAAA;IAGM,IAAM,6BAA6B,GAAGC,wBAAW,CAAC,UAAC,CAAgC,IAAK,OAAA,CAAC,CAAC,4BAA4B,GAAA,CAAC;;ICb9H;QACI,sCAAoB,QAAyB;YAAzB,aAAQ,GAAR,QAAQ,CAAiB;SAAI;QAE1C,wDAAiB,GAAxB,UAAyB,SAAiB;YACtC,IAAI,GAAG,GAAGD,iBAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;YACrF,IAAI,IAAI,GAAG;gBACP,SAAS,EAAE,SAAS;aACvB,CAAA;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACvE;QACL,mCAAC;IAAD,CAAC,IAAA;IAGM,IAAM,6BAA6B,GAAGC,wBAAW,CAAC,UAAC,CAAgC,IAAK,OAAA,CAAC,CAAC,4BAA4B,GAAA,CAAC;;ICb9H;QACI,wCAAoB,QAAyB;YAAzB,aAAQ,GAAR,QAAQ,CAAiB;SAAI;QAE1C,4DAAmB,GAA1B,UAA2B,MAAc;YACrC,IAAI,GAAG,GAAGD,iBAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,qBAAqB,EAAE,sBAAsB,CAAC,CAAC;YACzF,IAAI,IAAI,GAAG;gBACP,MAAM,EAAG,MAAM;aAClB,CAAA;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACvE;QACL,qCAAC;IAAD,CAAC,IAAA;IAGM,IAAM,+BAA+B,GAAGC,wBAAW,CAAC,UAAC,CAAkC,IAAK,OAAA,CAAC,CAAC,8BAA8B,GAAA,CAAC;;ICbpI;QACI,qCAAoB,QAAyB;YAAzB,aAAQ,GAAR,QAAQ,CAAiB;SAAI;QAE1C,sDAAgB,GAAvB,UAAwB,WAAmB,EAAE,QAAgB,EAAE,MAAc;YACzE,IAAI,GAAG,GAAGD,iBAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;YACnF,IAAI,IAAI,GAAG;gBACP,WAAW,EAAG,WAAW;gBACzB,QAAQ,EAAG,QAAQ;gBACnB,MAAM,EAAG,MAAM;aAClB,CAAA;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACvE;QACL,kCAAC;IAAD,CAAC,IAAA;IAGM,IAAM,4BAA4B,GAAGC,wBAAW,CAAC,UAAC,CAA+B,IAAK,OAAA,CAAC,CAAC,2BAA2B,GAAA,CAAC;;aCErG,sBAAsB,CAAE,MAAsB;;;;;;wBAI5D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBACvB,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,UAAU,CAAC,CAAC;wBACrE,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,QAAQ,CAAC,CAAC;wBACjE,qBAAqB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;wBAClF,IAAI,CAAC,eAAe,IAAI,CAAC,aAAa,IAAI,CAAC,qBAAqB,EAAE;4BAAE,sBAAO;yBAAC;wBAC5E,IAAI,eAAe,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE;4BACxE,QAAQ,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC;4BACxC,MAAM,GAAI,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;4BAEzC,IAAI,QAAQ,IAAI,MAAM,EAAE;gCAChB,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,OAAO,EAAE,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;gCAC9E,qBAAqB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;6BAC7C;iCACI;gCACD,qBAAqB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;6BAC7C;yBACJ;6BACI;4BACD,qBAAqB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;yBAC7C;wBAOG,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAuB,eAAe,CAAC,CAAC;wBACrF,8BAA8B,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,yBAAyB,CAAC,CAAC;wBAEtG,IAAI,CAAC,oBAAoB,IAAI,CAAC,qBAAqB,IAAI,CAAC,8BAA8B,EAAE;4BAAE,sBAAO;yBAAE;8BAC/F,oBAAoB,CAAC,QAAQ,EAAE,IAAI,qBAAqB,IAAI,IAAI,CAAA,EAAhE,wBAAgE;wBAC5D,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;wBACrD,qBAAM,eAAe,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAA;;wBAA/E,KAAK,GAAG,SAAuE;wBACnF,IAAI,KAAK,EAAE;4BACP,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,GAAG,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC;yBACtG;6BACI;4BACD,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;yBACtD;;;wBAGD,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;;;wBAKnD,mBAAmB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;wBAChF,mBAAmB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;KAE3C;aAEqB,wBAAwB,CAAE,MAAqB;;;;;;wBAE7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBACvB,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,UAAU,CAAC,CAAC;wBACrE,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,QAAQ,CAAC,CAAC;wBACjE,qBAAqB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;wBAClF,IAAI,CAAC,eAAe,IAAI,CAAC,aAAa,IAAI,CAAC,qBAAqB,EAAE;4BAAE,sBAAO;yBAAC;wBAE5E,IAAI,eAAe,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE;4BACxE,QAAQ,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC;4BACxC,MAAM,GAAI,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;4BAEzC,IAAI,QAAQ,IAAI,MAAM,EAAE;gCAChB,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,OAAO,EAAE,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;gCAC9E,qBAAqB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;6BAC7C;iCACI;gCACD,qBAAqB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;6BAC7C;yBACJ;6BACI;4BACD,qBAAqB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;yBAC7C;wBAGG,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAuB,eAAe,CAAC,CAAC;wBACrF,8BAA8B,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,yBAAyB,CAAC,CAAC;wBAEtG,IAAI,CAAC,oBAAoB,IAAI,CAAC,qBAAqB,IAAI,CAAC,8BAA8B,EAAE;4BAAE,sBAAO;yBAAE;8BAC/F,oBAAoB,CAAC,QAAQ,EAAE,IAAI,qBAAqB,IAAI,IAAI,CAAA,EAAhE,wBAAgE;wBAC5D,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;wBACrD,qBAAM,eAAe,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAA;;wBAA/E,KAAK,GAAG,SAAuE;wBACnF,IAAI,KAAK,EAAE;4BACP,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,GAAG,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC;yBACtG;6BACI;4BACD,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;yBACtD;;;wBAGD,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;;KAG1D;aAGqB,oBAAoB,CAAC,MAAoB;;;;gBAIvD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBACvB,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAY,QAAQ,CAAC,CAAC;gBAC/D,qBAAqB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,gBAAgB,CAAC,CAAC;gBACjF,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,UAAU,CAAC,CAAC;gBACrE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,QAAQ,CAAC,CAAC;gBACrE,+BAA+B,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAW,wBAAwB,CAAC,CAAC;gBAEjG,IAAI,CAAC,gBAAgB,IAAI,CAAC,qBAAqB,IAAI,CAAC,eAAe,IAAI,CAAC,iBAAiB,IAAI,CAAC,+BAA+B,EAAE;oBAAE,sBAAO;iBAAE;gBACtI,OAAO,GAAG,wGAAwG;qBACjH,MAAM,EACF,gBAAgB,CAAC,QAAQ,EAAE,GAAG,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,IAC/E,qBAAqB,CAAC,QAAQ,EAAE,GAAG,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,GAAG,WAAW,IACxG,eAAe,CAAC,QAAQ,EAAE,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,GAAG,WAAW,IAC5F,iBAAiB,CAAC,QAAQ,EAAE,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,GAAG,WAAW,IAChG,+BAA+B,CAAC,QAAQ,EAAE,GAAG,+BAA+B,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,WAAW,EAC1H,CAAC;gBACFC,qBAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;;;;KAIhC;aAEe,YAAY,CAAC,MAAc,EAAE,IAA+C;;;;QAKxF,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC3B,IAAI,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAU,MAAM,CAAC,CAAC;QAC1D,IAAI,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAY,QAAQ,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO;SAAE;QAE/C,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE;YACxE,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE;gBACxEA,qBAAU,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC;aAC5D;iBACI,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE;gBAC7EA,qBAAU,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC;aACxD;iBACI;gBACDA,qBAAU,CAAC,SAAS,CAAC,iDAAiD,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;;;;IAKL,CAAC;aACqB,wBAAwB,CAAC,MAAgB;;;;;;wBAIvD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBACvB,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAW,YAAY,CAAC,CAAC;wBACnE,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAU,WAAW,CAAC,CAAC;wBACpE,IAAI,CAAC,iBAAiB,IAAI,CAAC,gBAAgB,EAAE;4BAAE,sBAAO;yBAAE;6BACpD,MAAM,CAAC,QAAQ,EAAE,EAAjB,wBAAiB;wBACb,qBAAqB,GAAG,MAAM,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;wBACjE,qBAAM,qBAAqB,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAA;;wBAA3E,KAAK,GAAG,SAAmE;6BAC3E,KAAK,EAAL,wBAAK;wBACL,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;8BACxC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAA,EAA1C,wBAA0C;wBAC1C,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;;4BAGhC,qBAAM,qBAAqB,CAAC,eAAe,CAAC,sCAAsC,CAAC,EAAA;;wBAA9F,QAAQ,GAAG,SAAmF;wBAClG,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;;;;wBAK1D,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;wBACrC,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;;KAK7C;aAEqB,mBAAmB,CAAC,MAAc;;;;;;wBAIhD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBAEvB,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAoB,6BAA6B,CAAC,CAAC;wBACjG,IAAI,CAAC,iBAAiB,EAAE;4BAAE,sBAAO;yBAAE;wBAC/B,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;wBAC1D,qBAAM,OAAO,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAA;;wBAApD,KAAK,GAAG,SAA4C;wBACxD,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;wBAM7C,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,UAAU,CAAC,CAAC;wBACrE,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,QAAQ,CAAC,CAAC;wBACjE,qBAAqB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;wBAClF,IAAI,CAAC,eAAe,IAAI,CAAC,aAAa,IAAI,CAAC,qBAAqB,EAAE;4BAAE,sBAAO;yBAAE;wBAC7E,IAAI,eAAe,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE;4BACxE,QAAQ,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC;4BACxC,MAAM,GAAI,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;4BAEzC,IAAI,QAAQ,IAAI,MAAM,EAAE;gCAChB,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,OAAO,EAAE,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;gCAC9E,qBAAqB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;6BAC7C;yBACJ;;;;;KAEJ;aAEqB,sBAAsB,CAAC,MAA4B;;;;;;wBAKjE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBACvB,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAuB,eAAe,CAAC,CAAC;wBACrF,qBAAqB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;wBAC9E,8BAA8B,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,yBAAyB,CAAC,CAAC;wBAEtG,IAAI,CAAC,oBAAoB,IAAI,CAAC,qBAAqB,IAAI,CAAC,8BAA8B,EAAE;4BAAE,sBAAO;yBAAE;8BAC/F,MAAM,CAAC,QAAQ,EAAE,IAAI,qBAAqB,IAAI,IAAI,CAAA,EAAlD,wBAAkD;wBAC9C,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;wBACrD,qBAAM,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAA;;wBAAjE,KAAK,GAAG,SAAyD;wBACrE,IAAI,KAAK,EAAE;4BACP,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,GAAG,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC;yBACtG;;;wBAGD,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;;;wBASnD,mBAAmB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;wBAChF,mBAAmB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;KAE3C;aAEqB,yCAAyC,CAAC,MAAqB;;;;;;wBAK7E,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBACvB,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAuB,eAAe,CAAC,CAAC;wBACrF,qBAAqB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;wBAC9E,8BAA8B,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,yBAAyB,CAAC,CAAC;wBACtG,IAAI,CAAC,oBAAoB,IAAI,CAAC,qBAAqB,IAAI,CAAC,8BAA8B,EAAE;4BAAE,sBAAO;yBAAE;8BAE/F,qBAAqB,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,oBAAoB,IAAI,IAAI,CAAA,EAA1E,wBAA0E;wBACtE,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;wBACrD,qBAAM,eAAe,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAA;;wBAA/E,KAAK,GAAG,SAAuE;wBACnF,IAAI,KAAK,EAAE;4BACP,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,GAAG,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC;yBACtG;;;wBAGD,8BAA8B,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;;KAM1D;IAED;;aAEsB,2BAA2B,CAAC,MAAoB;;;;;;wBAC9D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBACvB,uBAAuB,GAAG,MAAM,CAAC,UAAU,CAAC,+BAA+B,CAAC,CAAC;wBACrE,qBAAM,uBAAuB,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAA;;wBAA7E,KAAK,GAAG,SAAqE;wBAEjFA,qBAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAE/B,aAAa,GAAG,MAAM,CAAC,UAAU,CAACC,yBAAiB,CAAC,CAAC;wBACzD,aAAa,CAAC,IAAI,EAAE,CAAC;;;;;KACxB;IACD;;IAGA;IACA;aAEsB,8BAA8B,CAAC,MAAoB;;;;;;wBACjE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBACvB,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAuB,eAAe,CAAC,CAAC;wBACrF,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,UAAU,CAAC,CAAC;wBACrE,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,QAAQ,CAAC,CAAC;wBACjE,mBAAmB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;wBAC5E,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAW,SAAS,CAAC,CAAC;wBACjE,IAAI,CAAC,oBAAoB,IAAI,CAAC,eAAe,IAAI,CAAC,aAAa,IAAI,CAAC,mBAAmB,IAAI,CAAC,cAAc,EAAE;4BAAE,sBAAO;yBAAE;8BAEnH,cAAc,CAAC,SAAS,IAAI,CAAC,CAAA,EAA7B,wBAA6B;8BACzB,eAAe,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,cAAc,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAA,EAAjH,wBAAiH;wBAC7G,eAAe,GAAG,oBAAoB,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;wBAClE,qBAAM,eAAe,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAA;;wBAAvF,aAAa,GAAG,SAAuE;6BACvF,aAAa,EAAb,wBAAa;wBACT,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC;wBACxC,QAAQ,GAAGC,0BAAM,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;wBAChF,MAAM,GAAGA,0BAAM,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;wBAE5E,oBAAoB,GAAG,MAAM,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;wBAClD,qBAAM,oBAAoB,CAAC,gBAAgB,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAA;;wBAA/F,kBAAkB,GAAG,SAA0E;wBACnG,IAAI,MAAM,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;4BAC7C,mBAAmB,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;yBAC9E;6BACI;4BACD,mBAAmB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;4BACxCF,qBAAU,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;yBAC9C;;;;wBAIL,mBAAmB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;wBACxCA,qBAAU,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;;;;wBAI/CA,qBAAU,CAAC,SAAS,CAAC,0EAA0E,CAAC,CAAC;;;;;;KAExG;aAEqB,gBAAgB,CAAC,MAAgB;;;;gBAE/C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBACvB,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAW,SAAS,CAAC,CAAC;gBAC7D,mBAAmB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAgB,cAAc,CAAC,CAAC;gBAChF,IAAI,CAAC,cAAc,IAAI,CAAC,mBAAmB,EAAE;oBAAE,sBAAO;iBAAE;gBAExD,IAAI,cAAc,CAAC,SAAS,IAAI,CAAC,EAAE;oBAC/B,mBAAmB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;iBAC3C;;;;KAEJ;IAED;aACsB,gCAAgC,CAAC,MAAsB;;;;gBACrE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBACvB,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAiB,gBAAgB,CAAC,CAAC;gBAC1E,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;gBACvB,cAAc,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;IC3WxC;IACA;IACA;IAEA;IACA;AACAG,qCAAgB,CAAC,iBAAiB,CAAC;QAC/B,IAAI,EAAE,2BAA2B;QACjC,OAAO,EAAE,QAAQ;QACjB,mBAAmB,EAAE,CAAE,aAAa,CAAE;QACtC,cAAc,EAAE;YACZC,eAAO,CAAC,WAAW,CAAC,6BAA6B,EAAE,UAAC,QAAyB,IAAK,OAAA,IAAI,4BAA4B,CAAC,QAAQ,CAAC,GAAA,CAAC;YAC7HA,eAAO,CAAC,WAAW,CAAC,uBAAuB,EAAE,UAAC,QAAyB,IAAK,OAAA,IAAI,sBAAsB,CAAC,QAAQ,CAAC,GAAA,CAAC;YACjHA,eAAO,CAAC,WAAW,CAAC,6BAA6B,EAAE,UAAC,QAAyB,IAAK,OAAA,IAAI,4BAA4B,CAAC,QAAQ,CAAC,GAAA,CAAC;YAC7HA,eAAO,CAAC,WAAW,CAAC,4BAA4B,EAAE,UAAC,QAAyB,IAAK,OAAA,IAAI,2BAA2B,CAAC,QAAQ,CAAC,GAAA,CAAC;YAC3HA,eAAO,CAAC,WAAW,CAAC,+BAA+B,EAAE,UAAC,QAAyB,IAAK,OAAA,IAAI,8BAA8B,CAAC,QAAQ,CAAC,GAAA,CAAC;SACpI;KACJ,CAAC;;;;;;"}